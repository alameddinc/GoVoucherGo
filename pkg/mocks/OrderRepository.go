// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	entity "github.com/alameddinc/GoVoucherGo/internal/core/entity"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockOrderRepository is an autogenerated mock type for the Repository type
type MockOrderRepository struct {
	mock.Mock
}

// Apply provides a mock function with given fields: orderCost, orderID, VoucherCode
func (_m *MockOrderRepository) Apply(orderCost float64, orderID string, VoucherCode string) {
	_m.Called(orderCost, orderID, VoucherCode)
}

// Cancel provides a mock function with given fields: orderID, VoucherCode
func (_m *MockOrderRepository) Cancel(orderID string, VoucherCode string) {
	_m.Called(orderID, VoucherCode)
}

// GetDetails provides a mock function with given fields: orderID
func (_m *MockOrderRepository) GetDetails(orderID string) *entity.Order {
	ret := _m.Called(orderID)

	var r0 *entity.Order
	if rf, ok := ret.Get(0).(func(string) *entity.Order); ok {
		r0 = rf(orderID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Order)
		}
	}

	return r0
}

// NewMockOrderRepository creates a new instance of MockOrderRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockOrderRepository(t testing.TB) *MockOrderRepository {
	mock := &MockOrderRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
